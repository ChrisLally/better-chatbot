[
  {
    "schemaname": "public",
    "tablename": "project_teams",
    "policyname": "Users can manage project_teams they have access to",
    "permissive": "PERMISSIVE",
    "roles": "{authenticated}",
    "cmd": "ALL",
    "qual": "(EXISTS ( SELECT 1\n   FROM ((projects p\n     JOIN workspaces w ON ((p.workspace_id = w.id)))\n     JOIN workspace_members wm ON ((w.id = wm.workspace_id)))\n  WHERE ((p.id = project_teams.project_id) AND (wm.user_id = auth.uid()) AND (wm.role = ANY (ARRAY['admin'::workspace_member_role_enum, 'member'::workspace_member_role_enum])))))",
    "with_check": "(EXISTS ( SELECT 1\n   FROM ((projects p\n     JOIN workspaces w ON ((p.workspace_id = w.id)))\n     JOIN workspace_members wm ON ((w.id = wm.workspace_id)))\n  WHERE ((p.id = project_teams.project_id) AND (wm.user_id = auth.uid()) AND (wm.role = ANY (ARRAY['admin'::workspace_member_role_enum, 'member'::workspace_member_role_enum])))))"
  },
  {
    "schemaname": "public",
    "tablename": "project_teams",
    "policyname": "Users can view project teams for workspace projects",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "cmd": "SELECT",
    "qual": "(project_id IN ( SELECT p.id\n   FROM (projects p\n     JOIN workspace_members wm ON ((p.workspace_id = wm.workspace_id)))\n  WHERE (wm.user_id = auth.uid())))",
    "with_check": null
  },
  {
    "schemaname": "public",
    "tablename": "project_teams",
    "policyname": "Users can view project_teams in their workspace",
    "permissive": "PERMISSIVE",
    "roles": "{authenticated}",
    "cmd": "SELECT",
    "qual": "(EXISTS ( SELECT 1\n   FROM ((projects p\n     JOIN workspaces w ON ((p.workspace_id = w.id)))\n     JOIN workspace_members wm ON ((w.id = wm.workspace_id)))\n  WHERE ((p.id = project_teams.project_id) AND (wm.user_id = auth.uid()))))",
    "with_check": null
  },
  {
    "schemaname": "public",
    "tablename": "project_teams",
    "policyname": "Workspace members can create project teams",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "(project_id IN ( SELECT p.id\n   FROM (projects p\n     JOIN workspace_members wm ON ((p.workspace_id = wm.workspace_id)))\n  WHERE (wm.user_id = auth.uid())))"
  },
  {
    "schemaname": "public",
    "tablename": "project_teams",
    "policyname": "Workspace members can delete project teams",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "cmd": "DELETE",
    "qual": "(project_id IN ( SELECT p.id\n   FROM (projects p\n     JOIN workspace_members wm ON ((p.workspace_id = wm.workspace_id)))\n  WHERE (wm.user_id = auth.uid())))",
    "with_check": null
  },
  {
    "schemaname": "public",
    "tablename": "project_teams",
    "policyname": "Workspace members can update project teams",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "cmd": "UPDATE",
    "qual": "(project_id IN ( SELECT p.id\n   FROM (projects p\n     JOIN workspace_members wm ON ((p.workspace_id = wm.workspace_id)))\n  WHERE (wm.user_id = auth.uid())))",
    "with_check": null
  },
  {
    "schemaname": "public",
    "tablename": "users",
    "policyname": "Service role can access agent JWT data",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "cmd": "ALL",
    "qual": "(auth.role() = 'service_role'::text)",
    "with_check": null
  },
  {
    "schemaname": "public",
    "tablename": "users",
    "policyname": "Users can view own basic data",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "cmd": "SELECT",
    "qual": "(auth.uid() = id)",
    "with_check": null
  }
]
